# NOTE: Generated By HttpRunner v3.1.4
# FROM: 商家新增授信.har


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase
import pytest
from httprunner import Parameters


class TestCaseLogin(HttpRunner):

    config = (
        Config("商家中心，商家新增授信操作")
        .base_url("${get_base_url()}")
        .variables(**{
            "x_app_id": "200",
            "x_tenant_id": '2',
            "password": "200622",
            "regType": 4,
            "userName": "opsAdmin",
            "verifyCode": "1234",
        })
        .verify(False)
        .export(*["token", "verifyId", "sessionId", "x_tenant_id"])
    )


    teststeps = [
        Step(
            RunRequest("/ops/api/web/getVerificationCode")
            .get("/ops/api/web/getVerificationCode?")
            .with_headers(
                **{
                    "x-app-id": "",
                    "x-tenant-id": "",
                    "sso_sessionid": "",
                    "Token": "",
                }
            )
            .extract()
            .with_jmespath("body.data.verifyId", "verifyId")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/ops/api/web/login")
            .post("/ops/api/web/login")
            .with_headers(
                **{
                    "x-app-id": "",
                    "x-tenant-id": "",
                    "sso_sessionid": "",
                    "Token": "",
                }
            )
            .with_json(
                {
                    "userName": "$userName",
                    "password": "$password",
                    "verifyCode": "$verifyCode",
                    "verifyId": "$verifyId",
                    "regType": "$regType",
                }
            )
            .extract()
            .with_jmespath("body.data.token", "token")
            .with_jmespath("body.data.sessionId", "sessionId")
            .with_jmespath('body.data.personDetailResDto.tenantId', "x_tenant_id")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
    ]


# if __name__ == "__main__":
#     TestCaseBusinessCredit().test_start()
