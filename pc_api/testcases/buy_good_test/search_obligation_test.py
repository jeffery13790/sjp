# NOTE: Generated By HttpRunner v3.1.4
# FROM: 购买商品下单.har
"""
@author :springfall

"""

from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase
from testcases.login_test.login_test import TestCaseLogin as Login
import pytest
from httprunner import Parameters
from datetime import datetime


class TestCaseSearchObligation(HttpRunner):

    @pytest.mark.parametrize(
        'param',
        Parameters(
            {
                "phoneNumber-verifyCode-storeCode": "${parameterize(common.csv)}",
                "sceneId": ["1250298585821192194"],
                "good_name": "${get_good_name()}"
            }
        ),
    )
    def test_start(self, param):
        super().test_start(param)

    config = (
        Config("搜索商品然后下单")
        .base_url("${get_base_url()}")
        .export(*['sessionId', 'token', 'accountCode', 'personId', "name", "nickname", "username", "phone", "memberCode", "userCode", "account_id", "orderIdOut", "additionalId", "itemCode", "categoryId", "classId", "skuCode", "orderNo"])
        .verify(False)
    )

    teststeps = [
        Step(
            RunTestCase("login")
            .call(Login)
            .export(*['sessionId', 'token', 'accountCode', 'personId', "name", "nickname", "username", "phone", "memberCode", "userCode", "account_id"])
        ),
        Step(
            RunRequest("/mall/homeTemplate/getItemPagerByYourLike")
            .get("/mall/homeTemplate/getItemPagerByYourLike")
            .with_params(**{"qp-storeCode-eq": "$storeCode", "pageSize": "12"})
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                    }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/cart/cartTotalNum")
            .get("/mall/cart/cartTotalNum")
            .with_params(
                **{
                    "cartType": "1",
                    "channel": "1",
                    "pageSize": "50",
                    "qp-buyerCode-eq": "$accountCode",
                    "qp-cartType-eq": "0",
                    "qp-channelId-eq": "1",
                    "qp-storeCode-eq": "$storeCode",
                }
            )
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                    }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/category/queryCategoryTree")
            .get("/mall/category/queryCategoryTree")
            .with_params(**{"status": "0"})
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/homeTemplate/selectDefaultStoreAndSort")
            .get(
                "/mall/homeTemplate/selectDefaultStoreAndSort"
            )
            .with_params(**{"businessType": "phonix", "type": "pc"})
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                    }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/search/queryItemList")
            .get("/mall/search/queryItemList")
            .with_params(
                **{
                    "pageSize": "16",
                    "keyWord": "$good_name",
                    "qp-status-eq": "1",
                    "qp-storeCode-eq": "$storeCode",
                }
            )
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                    }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .extract()
            .with_jmespath('body.data.list[0].mediaList[0].additionalId', "additionalId")
            .with_jmespath('body.data.list[0].itemCode', "itemCode")
            .with_jmespath('body.data.list[0].categoryId', "categoryId")
            .with_jmespath('body.data.list[0].classId', "classId")
            .with_jmespath('body.data.list[0].skuCode', "skuCode")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/cart/cartTotalNum")
            .get("/mall/cart/cartTotalNum")
            .with_params(
                **{
                    "cartType": "1",
                    "channel": "1",
                    "pageSize": "50",
                    "qp-buyerCode-eq": "$accountCode",
                    "qp-cartType-eq": "0",
                    "qp-channelId-eq": "1",
                    "qp-storeCode-eq": "$storeCode",
                }
            )
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                    }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/category/queryCategoryTree")
            .get("/mall/category/queryCategoryTree")
            .with_params(**{"status": "0"})
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                    }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/homeTemplate/selectDefaultStoreAndSort")
            .get(
                "/mall/homeTemplate/selectDefaultStoreAndSort"
            )
            .with_params(**{"businessType": "phonix", "type": "pc"})
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                    }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/cart/cartTotalNum")
            .get("/mall/cart/cartTotalNum")
            .with_params(
                **{
                    "cartType": "1",
                    "channel": "1",
                    "pageSize": "50",
                    "qp-buyerCode-eq": "$accountCode",
                    "qp-cartType-eq": "0",
                    "qp-channelId-eq": "1",
                    "qp-storeCode-eq": "$storeCode",
                }
            )
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                    }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/item/oneItem")
            .get("/mall/item/oneItem")
            .with_params(
                **{
                    "qp-storeCode-eq": "$storeCode",
                    "qp-itemCode-eq": "$itemCode",
                    "loginStatus": "loginStatus",
                }
            )
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                    }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .extract()
            .with_jmespath('body.data.name', "oneItemName")
            .with_jmespath('body.data.skuList[0].originalPrice', "originalPrice")
            .with_jmespath('body.data.skuList[0].price', "price")
            .with_jmespath('body.data.skuList[0].pricing', "pricing")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/browsingHistory/save")
            .post("/mall/browsingHistory/save")
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                    }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .with_json(
                {
                    "browsingDate": "{}T23:51:58.477Z".format(datetime.now().strftime("%y-%m-%d")),
                    "code": "2",
                    "itemCode": "$itemCode",
                    "storeCode": "$storeCode",
                    "userId": "$account_id",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/item/selectActivityAndTicket")
            .get("/mall/item/selectActivityAndTicket")
            .with_params(
                **{
                    "qp-skuCode-in": "$skuCode",
                    "qp-storeCode-eq": "$storeCode",
                    "qp-memberCardCode-eq": "$memberCode",
                    "qp-userCode-eq": "$accountCode",
                }
            )
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                   }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/item/getItemList")
            .get("/mall/item/getItemList")
            .with_params(
                **{
                    "frontCategoryId": "$categoryId",
                    "byClassIds": "$classId",
                    "currentPage": "1",
                    "mustNot": "$itemCode",
                    "qp-storeCode-eq": "$storeCode",
                }
            )
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                    }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/item/getCommentList")
            .get("/mall/item/getCommentList")
            .with_params(
                **{"qp-skuCode-eq": "$skuCode", "pageSize": "10", "currentPage": "1"}
            )
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                    }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/areaInfo/getBscAreaList")
            .get("/mall/areaInfo/getBscAreaList")
            .with_params(**{"qp-level-eq": "1", "pageSize": "100"})
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/deliveryAddress/query")
            .get("/mall/deliveryAddress/query")
            .with_params(
                **{
                    "pageSize": "50",
                    "qp-personId-eq": "$personId",
                    "sorter": "desc-type",
                }
            )
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                    }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/invoice/one")
            .get("/mall/invoice/one")
            .with_params(**{"personId": "$personId", "type": "2"})
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/deliveryAddress/query")
            .get("/mall/deliveryAddress/query")
            .with_params(
                **{
                    "pageSize": "50",
                    "qp-personId-eq": "$personId",
                    "sorter": "desc-type",
                }
            )
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/cart/cartTotalPrice")
            .post("/mall/cart/cartTotalPrice")
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .with_json(
                {
                    "buyerCode": "$accountCode",
                    "calStep": 2,
                    "cartLineReqDtos": [
                        {
                            "buyerCode": "$accountCode",
                            "channelId": 1,
                            "classCode": "$categoryId",
                            "itemCode": "$itemCode",
                            "sellerCode": "SJ001",
                            "skuCode": "$skuCode",
                            "skuQuantity": 1,
                            "storeCode": "$storeCode",
                        }
                    ],
                    "channel": 1,
                    "memberCardCode": "$memberCode",
                    "orderSource": 1,
                    "sellerCode": "SJ001",
                    "storeCode": "$storeCode",
                    "tradeType": 8,
                    "orderAddressReqDto": {
                        "cityName": "北京市",
                        "consignee": "springfall_5",
                        "detail": "虹梅路220号",
                        "districtName": "东城区",
                        "phone": "$phoneNumber",
                        "provinceName": "北京",
                        "cityCode": "110000",
                        "districtCode": "110101",
                        "provinceId": "2",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/order/getOrderCode")
            .get("/mall/order/getOrderCode")
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .extract()
            .with_jmespath('body.data.orderNo', "orderIdOut")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/cart/order/save")
            .post("/mall/cart/order/save")
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .with_json(
                {
                    "cartIds": "$additionalId",
                    "cartType": 0,
                    "customName": "springfall_5",
                    "discountAmount": 0,
                    "freigthAmount": 0,
                    "generalDiscountAmount": 0,
                    "memberCardCode": "$memberCode",
                    "memberCardLevel": "LV1",
                    "orderAddressReqDto": {
                        "cityName": "北京市",
                        "consignee": "springfall_5",
                        "detail": "虹梅路220号",
                        "districtName": "东城区",
                        "phone": "$phoneNumber",
                        "provinceName": "北京",
                        "cityCode": "110000",
                        "districtCode": "110101",
                        "provinceId": "2",
                    },
                    "orderSource": 1,
                    "tradeType": 8,
                    "channel": 1,
                    "storeCode": "$storeCode",
                    "buyerCode": "$accountCode",
                    "actualAmount": "$price",
                    "orderAmount": "$price",
                    "orderLineReqDtoList": [
                        {
                            "itemCode": "$itemCode",
                            "skuCode": "$skuCode",
                            "skuPrice": "$pricing",
                            "skuQuantity": 1,
                            "amount": "$pricing",
                            "actualPrice": "$pricing",
                            "averagePrice": "$pricing",
                            "ticketPromotionPrice": 0,
                            "actualAmount": "$price",
                            "averageAmount": 10000000,
                            "sellerCode": "SJ001",
                            "buyerCode": "$accountCode",
                            "storeCode": "$storeCode",
                            "totalPayTicket": 0,
                            "ticketPhase": 0,
                            "promotionPhase": 0,
                            "avaliableGoodsTicketList": [],
                            "canUseTicket": 1,
                            "isExpire": 0,
                            "itemName": "$oneItemName",
                        }
                    ],
                    "payableAmount": "$pricing",
                    "phoneNumber": "$phoneNumber",
                    "totalQuantity": 1,
                    "orderIdOut": "$orderIdOut",
                }
            )
            .extract()
            .with_jmespath('body.data.orderNo', "orderNo")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/orderAddress/putUpdateOrderAddressByOrderNo")
            .put(
                "/mall/orderAddress/putUpdateOrderAddressByOrderNo"
            )
            .with_params(
                **{
                    "orderNo": "$orderNo",
                    "phoneNumber": "$phoneNumber",
                    "receiver": "springfall_5",
                }
            )
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .with_json(
                {
                    "orderNo": "$orderNo",
                    "phoneNumber": "$phoneNumber",
                    "receiver": "springfall_5",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/category/queryCategoryTree")
            .get("/mall/category/queryCategoryTree")
            .with_params(**{"status": "0"})
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/homeTemplate/selectDefaultStoreAndSort")
            .get(
                "/mall/homeTemplate/selectDefaultStoreAndSort"
            )
            .with_params(**{"businessType": "phonix", "type": "pc"})
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/payFlow/channel/scene")
            .get("/mall/payFlow/channel/scene")
            .with_params(**{"qp-sceneId-eq": "$sceneId"})  #微信扫描sceneId号
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/customerService/getOneOrder")
            .get("/mall/customerService/getOneOrder")
            .with_params(**{"qp-orderNo-eq": "$orderNo"})
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/cart/cartTotalNum")
            .get("/mall/cart/cartTotalNum")
            .with_params(
                **{
                    "cartType": "1",
                    "channel": "1",
                    "pageSize": "50",
                    "qp-buyerCode-eq": "$accountCode",
                    "qp-cartType-eq": "0",
                    "qp-channelId-eq": "1",
                    "qp-storeCode-eq": "$storeCode",
                }
            )
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/payFlow/order/add")
            .post("/mall/payFlow/order/add")
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .with_json({"orderNo": "$orderNo"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/order/allOrderSystemDeploy")
            .get("/mall/order/allOrderSystemDeploy")
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/payFlow/action/pc/prepare")
            .post("/mall/payFlow/action/pc/prepare")
            .with_headers(
                **{

                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                    }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .with_json(
                {
                    "channelCode": "20",
                    "orderNo": "$orderNo",
                    "storeCode": "$storeCode",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/order/one/status")
            .get("/mall/order/one/status")
            .with_params(**{"qp-orderNo-eq": "$orderNo"})
            .with_headers(
                **{

                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/web/getVerificationCode")
            .get("/mall/web/getVerificationCode")
            .with_params(**{"page": "1"})
            .with_headers(
                **{
                    "x-tenant-id": "2",
                    "sso_sessionid": "$sessionId",
                 }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .teardown_hook("${teardown_hook_sleep_N_secs($response, 7)}")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
    ]


if __name__ == "__main__":
    TestCaseSearchObligation().test_start()
