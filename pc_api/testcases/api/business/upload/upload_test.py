# NOTE: Generated By HttpRunner v3.1.4
# FROM: upload.yml


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase, Parameters
import pytest
from testcases.api.business.business_login_test import TestCaseBusinessLogin as Login


class TestCaseUpload(HttpRunner):

    @pytest.mark.parametrize(
        "param",
        Parameters({
            "business_userName-business_password-business_verifyCode-business_regType": "${parameterize(common.csv)}",
            "file_path": "${parameterize(testcases/api/business/upload/upload.csv)}"
        })
    )
    def test_start(self, param) -> "HttpRunner":
        super().test_start(param)

    config = (
        Config("计算购物车中选中商品的价格")
        .base_url("${get_base_url()}")
        .variables(**{
            "x_tenant_id": "2",  # tenant Default value : 2     必填选项  header部分
        })
        .export(*["sessionId", "token", "employeeName", "employeeId", "accountName", "accountId", "accountCode"])
        .verify(False)
    )

    teststeps = [
        Step(
            RunTestCase("商家后台登录")
            .call(Login)
            .export(*["sessionId", "token", "employeeName", "employeeId", "accountName", "accountId", "accountCode"])
        ),
        Step(
            RunRequest("图片上传")
            .with_variables(
                **{
                    "file_path": "$file_path",
                    "m_encoder": "${multipart_encoder(file=$file_path)}",
                }
            )
            .post("/business/api/upload")
            .with_headers(
                **{
                    "Content-Type": "${multipart_content_type($m_encoder)}",
                    "Token": "$token",
                    "sso_sessionid": "$sessionId",
                    "x-tenant-id": "$x_tenant_id",
                }
            )
            .with_data("$m_encoder")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
            # .assert_contains("body.data", "$file_path")
        ),
    ]


if __name__ == "__main__":
    TestCaseUpload().test_start()
