# NOTE: Generated By HttpRunner v3.1.4
# FROM: getSkuList.har


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase, Parameters
import pytest
from testcases.api.ops.opsLogin_test import TestCaseOpslogin as Login
import ast
"""
currentPage integer($int64) (query) 当前页数
pageSize integer($int64) (query) 每页记录数
qp-barCode-eq string (query) 条形码
qp-brandId-in string (query) 品牌id
qp-categoryId-in string (query) 类目id
qp-classId-in string (query) 品类id
qp-combination-eq string (query) 是否为组合商品:true or false
qp-labelIds-like string (query)	 标签id
qp-name-like string (query) 商品名称
qp-ownerId-eq string (query) 0集团 1商家
qp-skuCode-eq string (query) 商家编码，唯一的标识一个SKU
qp-storeCode-eq string (query)	 店铺编码
skuNameOrCode string (query)sku名称或编码
sorter string (query) 排序条件 desc-字段名或者asc-字段名

sso_sessionid string (header)	 sessionid
x-tenant-id *string (header) tenant Default value : 2
"""


class TestCaseGetskulist(HttpRunner):

    @pytest.mark.parametrize(
        "param",
        Parameters({
            "userName-password-verifyCode1-regType": "${parameterize(common.csv)}",
            "currentPage-pageSize-qp_barCode_eq-qp_brandId_in-qp_categoryId_in-qp_classId_in-qp_combination_eq-qp_labelIds_like-qp_name_like-qp_ownerId_eq-qp_skuCode_eq-qp_storeCode_eq-skuNameOrCode-sorter": "${parameterize(testcases/api/ops/item/getSkuList.csv)}",
        })
    )
    def test_start(self, param) -> "HttpRunner":
        super().test_start(param)

    config = (
        Config("登录ops环境")
        .base_url("${get_base_url()}")
        .variables(**{
            "x_tenant_id": "2",  # tenant Default value : 2     必填选项  header部分
            "x_app_id": "200",
        })
        .export(*["token", "sessionId"])
        .verify(False)
    )

    teststeps = [
        Step(
            RunTestCase("登录")
            .call(Login)
            .export(*["sessionId", "token"])
        ),
        Step(
            RunRequest("查询一系列资源对象")
            .get("/ops/api/sku/getSkuList")
            .with_params(**{
                "currentPage": "$currentPage",
                "pageSize": "$pageSize",
                "qp-barCode-eq": "$qp_barCode_eq",
                "qp-brandId-in": "$qp_brandId_in",
                "qp-categoryId-in": "$qp_categoryId_in",
                "qp-classId-in": "$qp_classId_in",
                "qp-combination-eq": "$qp_combination_eq",
                "qp-labelIds-like": "$qp_labelIds_like",
                "qp-name-like": "$qp_name_like",
                "qp-ownerId-eq": "$qp_ownerId_eq",
                "qp-skuCode-eq": "$qp_skuCode_eq",
                "qp-storeCode-eq": "$qp_storeCode_eq",
                "skuNameOrCode": "$skuNameOrCode",
                "sorter": "$sorter"
            })
            .with_headers(
                **{
                    "x-app-id": "200",
                    "x-tenant-id": "2",
                    "sso_sessionid": "1_1",
                    "Token": "$token",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
    ]


if __name__ == "__main__":
    TestCaseGetskulist().test_start()
