# NOTE: Generated By HttpRunner v3.1.4
# FROM: adress.har
from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase
import pytest
from httprunner import Parameters


class TestCaseAdress(HttpRunner):

    @pytest.mark.parametrize(
        'param',
        Parameters(
            {
                "x_app_id": ["200"],
                "x_tenant_id": ['2'],
                "password": ["200622"],
                "regType": [4],
                "userName": ["15900980894"],
                "verifyCode": ["123456"],
            }
        ),
    )
    def test_start(self, param):
        super().test_start(param)

    config = (
        Config("个人信息修改")
        .base_url("${get_base_url()}")
        .variables(**{"storeCode": "STORE000086"})
        .verify(False)
        .export(*["token", "verifyId", "sessionId"])
    )
    teststeps = [
        Step(
            RunRequest("/mall/web/pcLogin")
            .get("/mall/web/pcLogin")
            .with_params(**{"phoneNumber": "$userName", "verifyCode": "$verifyCode"})
            .with_headers(
                **{
                    "sso_sessionid": "undefined",
                    "x-tenant-id": "$x_tenant_id",
                }
            )
            .extract()
            .with_jmespath('body.data.sessionId', 'sessionId')
            .with_jmespath('body.data.token', 'token')
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/user/getUserInfo")
            .get("/mall/user/getUserInfo")
            .with_params(
                **{"sessionId": "$sessionId"}
            )
            .with_headers(
                **{
                    "sso_sessionid": "$sessionId",
                    "x-tenant-id": "$x_tenant_id",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .extract()
            .with_jmespath('body.data.accountResDto.accountCode', "accountCode")
            .with_jmespath('body.data.accountResDto.personId', "personId")
            .with_jmespath('body.data.accountResDto.name', "name")
            .with_jmespath('body.data.accountResDto.nickname', "nickname")
            .with_jmespath('body.data.accountResDto.username', "username")
            .with_jmespath('body.data.accountResDto.phone', "phone")
            .with_jmespath('body.data.memberCardResDto.memberCode', "memberCode")
            .with_jmespath('body.data.accountResDto.id', "accountId")
            .with_jmespath('body.data.personResDto.userCode', "userCode")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/areaInfo/getBscAreaList")
            .get("/mall/areaInfo/getBscAreaList")
            .with_params(**{"qp-level-eq": "1", "pageSize": "100"})
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/deliveryAddress/query")
            .get("/mall/deliveryAddress/query")
            .with_params(
                **{
                    "sorter": "desc-type",
                    "qp-personId-eq": "$personId",
                    "currentPage": "1",
                    "pageSize": "10",
                }
            )
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/areaInfo/getBscAreaList")
            .get("/mall/areaInfo/getBscAreaList")
            .with_params(**{"qp-pid-eq": "20", "pageSize": "100"})
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/areaInfo/getBscAreaList")
            .get("/mall/areaInfo/getBscAreaList")
            .with_params(**{"qp-pid-eq": "21", "pageSize": "100"})
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/deliveryAddress/save")
            .post("/mall/deliveryAddress/save")
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .with_json(
                {
                    "cityCode": "120000",
                    "cityName": "天津市",
                    "consignee": "接口新增",
                    "detail": "新增地址",
                    "districtCode": "120101",
                    "districtName": "和平区",
                    "personId": "$personId",
                    "phone": "15900980894",
                    "provinceCode": "120000",
                    "provinceName": "天津",
                    "type": 2,
                    "zipcode": "",
                    "check": True,
                    "provinceId": "20",
                }
            )
            .extract()
            .with_jmespath('body.data.id',"id")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/deliveryAddress/query")
            .get("/mall/deliveryAddress/query")
            .with_params(
                **{
                    "sorter": "desc-type",
                    "qp-personId-eq": "$personId",
                    "currentPage": "1",
                    "pageSize": "10",
                }
            )
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/deliveryAddress/query")
            .get("/mall/deliveryAddress/query")
            .with_params(
                **{
                    "sorter": "desc-type",
                    "qp-personId-eq": "$personId",
                    "currentPage": "1",
                    "pageSize": "10",
                }
            )
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/areaInfo/getBscAreaList")
            .get("/mall/areaInfo/getBscAreaList")
            .with_params(**{"qp-pid-eq": "20", "pageSize": "100"})
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/areaInfo/getBscAreaList")
            .get("/mall/areaInfo/getBscAreaList")
            .with_params(**{"qp-pid-eq": "21", "pageSize": "100"})
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/areaInfo/getBscAreaList")
            .get("/mall/areaInfo/getBscAreaList")
            .with_params(**{"qp-pid-eq": "38", "pageSize": "100"})
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/areaInfo/getBscAreaList")
            .get("/mall/areaInfo/getBscAreaList")
            .with_params(**{"qp-pid-eq": "85", "pageSize": "100"})
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/deliveryAddress/put")
            .put("/mall/deliveryAddress/put")
            .with_params(**{"id": "$id"})
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .with_json(
                {
                    "id": "$id",
                    "personId": "$personId",
                    "type": 1,
                    "provinceName": "河北省",
                    "provinceId": "38",
                    "provinceCode": "120105",
                    "cityCode": "130400",
                    "cityName": "邯郸市",
                    "districtCode": "130406",
                    "districtName": "峰峰矿区",
                    "detail": "修改地址",
                    "zipcode": "",
                    "consignee": "修改地址",
                    "phone": "13311890896",
                    "check": False,
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/deliveryAddress/query")
            .get("/mall/deliveryAddress/query")
            .with_params(
                **{
                    "sorter": "desc-type",
                    "qp-personId-eq": "$personId",
                    "currentPage": "1",
                    "pageSize": "10",
                }
            )
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/areaInfo/getBscAreaList")
            .get("/mall/areaInfo/getBscAreaList")
            .with_params(**{"qp-pid-eq": "352", "pageSize": "100"})
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/areaInfo/getBscAreaList")
            .get("/mall/areaInfo/getBscAreaList")
            .with_params(**{"qp-pid-eq": "38", "pageSize": "100"})
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/areaInfo/getBscAreaList")
            .get("/mall/areaInfo/getBscAreaList")
            .with_params(**{"qp-pid-eq": "85", "pageSize": "100"})
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/deliveryAddress/save")
            .post("/mall/deliveryAddress/save")
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .with_json(
                {
                    "personId": "$personId",
                    "type": 1,
                    "provinceName": "河北省",
                    "provinceId": "38",
                    "provinceCode": "120105",
                    "cityCode": "130400",
                    "cityName": "邯郸市",
                    "districtCode": "130404",
                    "districtName": "复兴区",
                    "detail": "设为默认地址",
                    "zipcode": "",
                    "consignee": "设为默认地址",
                    "phone": "15900980894",
                    "check": False,
                }
            )
            .extract()
            .with_jmespath('body.data.id','id_2')
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/deliveryAddress/query")
            .get("/mall/deliveryAddress/query")
            .with_params(
                **{
                    "sorter": "desc-type",
                    "qp-personId-eq": "$personId",
                    "currentPage": "1",
                    "pageSize": "10",
                }
            )
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/deliveryAddress/default")
            .put("/mall/deliveryAddress/default")
            .with_params(**{"id": "$id_2"})
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .with_data('$id_2')
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/deliveryAddress/query")
            .get("/mall/deliveryAddress/query")
            .with_params(
                **{
                    "sorter": "desc-type",
                    "qp-personId-eq": "$personId",
                    "currentPage": "1",
                    "pageSize": "10",
                }
            )
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/deliveryAddress/delete")
            .delete("/mall/deliveryAddress/delete")
            .with_params(**{"ids": "$id_2"})
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
        Step(
            RunRequest("/mall/deliveryAddress/query")
            .get("/mall/deliveryAddress/query")
            .with_params(
                **{
                    "sorter": "desc-type",
                    "qp-personId-eq": "$personId",
                    "currentPage": "1",
                    "pageSize": "10",
                }
            )
            .with_headers(
                **{
                    "x-tenant-id": "$x_tenant_id",
                    "sso_sessionid": "$sessionId",
                }
            )
            .with_cookies(
                **{
                    "sessionId": "$sessionId",
                    "token": "$token",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal('headers."Content-Type"', "application/json;charset=UTF-8")
            .assert_equal("body.code", "000000")
            .assert_equal("body.msg", "Success")
        ),
    ]


if __name__ == "__main__":
    TestCaseAdress().test_start()
